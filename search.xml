<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Hello World</title>
    <url>/2023/12/06/hello-world/</url>
    <content><![CDATA[<p>Welcome to <a class="link"   href="https://hexo.io/" >Hexo <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a>! This is your very first post. Check <a class="link"   href="https://hexo.io/docs/" >documentation <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> for more info. If you get any problems when using Hexo, you can find the answer in <a class="link"   href="https://hexo.io/docs/troubleshooting.html" >troubleshooting <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> or you can ask me on <a class="link"   href="https://github.com/hexojs/hexo/issues" >GitHub <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a>.</p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure></div>

<p>More info: <a class="link"   href="https://hexo.io/docs/writing.html" >Writing <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure></div>

<p>More info: <a class="link"   href="https://hexo.io/docs/server.html" >Server <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure></div>

<p>More info: <a class="link"   href="https://hexo.io/docs/generating.html" >Generating <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure></div>

<p>More info: <a class="link"   href="https://hexo.io/docs/one-command-deployment.html" >Deployment <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
]]></content>
  </entry>
  <entry>
    <title>前端与HTML | 青训营</title>
    <url>/2023/12/13/%E5%89%8D%E7%AB%AF%E4%B8%8EHTML-%E9%9D%92%E8%AE%AD%E8%90%A5/</url>
    <content><![CDATA[]]></content>
  </entry>
  <entry>
    <title>如何写好Js | 青训营</title>
    <url>/2023/12/13/%E5%A6%82%E4%BD%95%E5%86%99%E5%A5%BDJs-%E9%9D%92%E8%AE%AD%E8%90%A5/</url>
    <content><![CDATA[<h1 id="第一部分：前端"><a href="#第一部分：前端" class="headerlink" title="第一部分：前端"></a>第一部分：前端</h1><h2 id="知识点一：什么是前端？"><a href="#知识点一：什么是前端？" class="headerlink" title="知识点一：什么是前端？"></a><strong>知识点一：什么是前端？</strong></h2><ul>
<li>解决GUI人机交互问题：</li>
<li>跨终端<ul>
<li>PC&#x2F;移动浏览器</li>
<li>客户端&#x2F;小程序</li>
<li>VR&#x2F;AR 等</li>
</ul>
</li>
<li>Web技术栈</li>
<li><strong>总结：前端工程师就是使用web技术栈解决多端图形用户交互界面的工程师</strong></li>
</ul>
<h2 id="知识点二：前端最基础的技术栈有哪些？"><a href="#知识点二：前端最基础的技术栈有哪些？" class="headerlink" title="知识点二：前端最基础的技术栈有哪些？"></a><strong>知识点二：前端最基础的技术栈有哪些？</strong></h2><ul>
<li>HTML（内容）</li>
<li>CSS（样式）</li>
<li>JavaScript（行为）</li>
<li>HTTP、TCP&#x2F;IP等的网路协议</li>
</ul>
<h2 id="知识点三：前端应该关注哪些方面？"><a href="#知识点三：前端应该关注哪些方面？" class="headerlink" title="知识点三：前端应该关注哪些方面？"></a><strong>知识点三：前端应该关注哪些方面？</strong></h2><ol>
<li>功能</li>
<li>美观</li>
<li>无障碍</li>
<li>安全</li>
<li>性能</li>
<li>兼容性</li>
</ol>
<h1 id="第二部分：HTML"><a href="#第二部分：HTML" class="headerlink" title="第二部分：HTML"></a>第二部分：HTML</h1><h2 id="知识点一：HTML是什么？"><a href="#知识点一：HTML是什么？" class="headerlink" title="知识点一：HTML是什么？"></a><strong>知识点一：HTML是什么？</strong></h2><ul>
<li><strong>H</strong>yper<strong>T</strong>ext（图片、标题、链接、表格）</li>
<li><strong>M</strong>arkup <strong>L</strong>anguage（标签） <code>&lt;h1&gt;标题&lt;/h1&gt;</code>、<code>&lt;img src=&quot;photo.jpg&quot;/&gt;</code>等</li>
<li>在<code>&lt;img src=&quot;photo.jpg&quot;/&gt;</code>中，<em>src</em>为<strong>属性名</strong>，<em>photo.jpg</em>为<strong>属性值</strong></li>
</ul>
<h2 id="知识点二：DOM树"><a href="#知识点二：DOM树" class="headerlink" title="知识点二：DOM树"></a><strong>知识点二：DOM树</strong></h2><div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">mindmap</span><br><span class="line">      document</span><br><span class="line">          html</span><br><span class="line">              head</span><br><span class="line">                  meta</span><br><span class="line">                  title &quot;Page Title&quot;</span><br><span class="line">              body</span><br><span class="line">                  h1 &quot;Heading&quot;</span><br><span class="line">                  p &quot;Page Content&quot;</span><br></pre></td></tr></table></figure></div>
<h2 id="知识点三：HTML语法"><a href="#知识点三：HTML语法" class="headerlink" title="知识点三：HTML语法"></a><strong>知识点三：HTML语法</strong></h2><ul>
<li>标签和属性不区分大小写，推荐<strong>小写</strong></li>
<li>空标签可以不闭合，比如 input、meta</li>
<li>属性值推荐使用<strong>双引号</strong>包裹</li>
<li>某些属性值可以忽略，比如 required、readonly</li>
</ul>
<p><strong>定义列表（dl）</strong>：dt（标题）、dd（具体描述）</p>
<p><strong>跳转链接（a）</strong>：<code>&lt;a href=&quot;https://www.bytedance.com/&quot; target=&quot;_blank&quot;&gt;</code><br>添加了<code>target=&quot;_blank&quot;</code>属性后表示在新的界面打开网页。</p>
<p><strong>图片（img）、音频（audio）、视频（video）</strong>：alt&#x3D;”加载失败时提示词”、controls（音频、视频控制属性）</p>
<p><strong>块级引用（blockquote）</strong>:<code>&lt;blockquote cite=&quot;http://t.cn/RfjKO0F&quot;&gt;</code>cite属性值为引用来源</p>
<p><strong>短引用（cite、q）</strong>：当引用了别人的名字或章节时使用使用<code>&lt;cite&gt;</code>，当引用具体致之前出现过的内容时用<code>&lt;q&gt;</code></p>
<p><strong>代码引用（code、pre）</strong>：在界面出现代码时引用，当出现多行代码时需要在<code>&lt;code&gt;</code>标签外套一层<code>&lt;pre&gt;</code>标签</p>
<p><strong>页面划分</strong>：常见的页面划分含有:</p>
<ul>
<li>页头<code>&lt;header&gt; </code>:可以存放logo以及导航栏<code>&lt;nav&gt;</code>等</li>
<li>主体部分<code>&lt;main&gt;</code>:一般一个页面只有一个main元素，其中可包含文字内容<code>&lt;article&gt;</code></li>
<li>侧边<code>&lt;aside&gt;</code>:可存放与主题部分无关的内容，如广告等</li>
<li>页脚<code>&lt;footer&gt;</code>:放置参考链接，备案等内容</li>
</ul>
<h2 id="知识点四：语义化是什么？"><a href="#知识点四：语义化是什么？" class="headerlink" title="知识点四：语义化是什么？"></a><strong>知识点四：语义化是什么？</strong></h2><ul>
<li>HTML中的<strong>元素</strong>、<strong>属性</strong>、以及<strong>属性值</strong>都拥有某些含义</li>
<li>开发者应该遵循<strong>语义</strong>来编写HTML<ul>
<li>有序列表用<strong>ol</strong>；无序列表用<strong>ul</strong></li>
<li><strong>lang</strong>属性表示内容所使用的语言</li>
</ul>
</li>
</ul>
<h2 id="知识点五：谁在使用我们写的HTML？"><a href="#知识点五：谁在使用我们写的HTML？" class="headerlink" title="知识点五：谁在使用我们写的HTML？"></a><strong>知识点五：谁在使用我们写的HTML？</strong></h2><ul>
<li>开发者 - 修改、维护界面</li>
<li>浏览器 - 展示界面</li>
<li>搜索引擎 - 提前关键词、排序</li>
<li>屏幕阅读器 - 给盲人读页面内容</li>
</ul>
<h2 id="知识点六：语义化的好处"><a href="#知识点六：语义化的好处" class="headerlink" title="知识点六：语义化的好处"></a><strong>知识点六：语义化的好处</strong></h2><ul>
<li>代码可读性</li>
<li>可维护性</li>
<li>搜索引擎优化</li>
<li>提升无障碍性</li>
</ul>
<h2 id="知识点七：如何做到语义化？"><a href="#知识点七：如何做到语义化？" class="headerlink" title="知识点七：如何做到语义化？"></a><strong>知识点七：如何做到语义化？</strong></h2><ul>
<li>了解每个标签和属性的含义</li>
<li>思考什么标签最适合表述这个内容</li>
<li>不使用可视化工具生成代码</li>
</ul>
<h1 id="个人总结"><a href="#个人总结" class="headerlink" title="个人总结"></a>个人总结</h1><p>在HTML的开发和编写中的语义化是必不可少的，本节课程向我们讲述了多个帮助我们达到语义化的标签，如<code>&lt;blockquote&gt;</code>、<code>&lt;cite&gt;</code>、<code>&lt;main&gt;</code>等的引用和划分元素标签，相较于直接使用常见标签，语义化的开发提升了我们的代码可读性和可维护性。</p>
]]></content>
      <categories>
        <category>前端编程</category>
      </categories>
      <tags>
        <tag>HTML</tag>
      </tags>
  </entry>
  <entry>
    <title>前端设计模式 | 青训营</title>
    <url>/2023/12/13/%E5%89%8D%E7%AB%AF%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F-%E9%9D%92%E8%AE%AD%E8%90%A5/</url>
    <content><![CDATA[<h1 id="一、什么是设计模式？"><a href="#一、什么是设计模式？" class="headerlink" title="一、什么是设计模式？"></a>一、什么是设计模式？</h1><h2 id="软件设计中常见问题的解决方案模型"><a href="#软件设计中常见问题的解决方案模型" class="headerlink" title="软件设计中常见问题的解决方案模型"></a>软件设计中常见问题的解决方案模型</h2><ul>
<li>历史经验的总结</li>
<li>与特定语言无关</li>
</ul>
<h2 id="设计模式背景"><a href="#设计模式背景" class="headerlink" title="设计模式背景"></a>设计模式背景</h2><ol>
<li>模式语言：城镇、建筑、建造 (A Pattern Language: Towns, Buildings, Construction) 1977</li>
<li>设计模式：可复用面向对象软件的基础 (Design Patterns: Elements of Reusable Object-Oriented Software) 1994</li>
</ol>
<h2 id="设计模式分类"><a href="#设计模式分类" class="headerlink" title="设计模式分类"></a>设计模式分类</h2><p> <strong>23种设计模式</strong></p>
<ul>
<li><strong>创建型 -</strong> 如何创建一个对象</li>
<li><strong>结构型 -</strong> 如何灵活的将对象组装成较大的结构</li>
<li><strong>行为型 -</strong> 负责对象间的高效通信和职责划分</li>
</ul>
<h1 id="二、浏览器中的设计模式"><a href="#二、浏览器中的设计模式" class="headerlink" title="二、浏览器中的设计模式"></a>二、浏览器中的设计模式</h1><h2 id="单列模式"><a href="#单列模式" class="headerlink" title="单列模式"></a>单列模式</h2><p><strong>- 定义 ：</strong> 全局唯一访问对象</p>
<p><strong>- 应用场景 ：</strong> 缓存，全局状态管理等</p>
<h2 id="用单列模式实现请求缓存"><a href="#用单列模式实现请求缓存" class="headerlink" title="用单列模式实现请求缓存"></a>用单列模式实现请求缓存</h2><p><strong>静态方法(getInstance) :</strong></p>
<div class="highlight-container" data-rel="Ts"><figure class="iseeu highlight ts"><table><tr><td class="code"><pre><span class="line"><span class="keyword">static</span> <span class="title function_">getInstance</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="variable language_">this</span>.<span class="property">instance</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">this</span>.<span class="property">instance</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">instance</span> = <span class="keyword">new</span> <span class="title class_">Request</span>();</span><br><span class="line">    <span class="keyword">return</span> <span class="variable language_">this</span>.<span class="property">instance</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>
<p>如果instance存在就返回它，如果不存在就新建一个instanc并返回。</p>
<h2 id="发布订阅模式"><a href="#发布订阅模式" class="headerlink" title="发布订阅模式"></a>发布订阅模式</h2><p><strong>- 定义 ：</strong> 一种订阅机制，可在被订阅对象发生变化时通知订阅者。</p>
<p><strong>- 应用场景 ：</strong> 从系统架构之间的解耦，到业务中一些实现模式，像邮件订阅，上线订阅等等，应用广泛。</p>
<p><strong>如：</strong></p>
<p><strong>1. 用发布订阅模式绑定按钮</strong></p>
<div class="highlight-container" data-rel="Js"><figure class="iseeu highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> button = <span class="variable language_">document</span>.<span class="title function_">getElementBtId</span>(<span class="string">&quot;button&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">doSomting1</span> = (<span class="params"></span>) =&gt; &#123;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;Send message to user&quot;</span>);</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">doSomting2</span> = (<span class="params"></span>) =&gt; &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;Log...&quot;</span>);</span><br><span class="line">    &#125;;</span><br><span class="line"></span><br><span class="line">button.<span class="title function_">addEventListener</span>(<span class="string">&quot;click&quot;</span>, doSomting1);</span><br><span class="line">button.<span class="title function_">addEventListener</span>(<span class="string">&quot;click&quot;</span>, doSomting2);</span><br><span class="line"><span class="comment">// ...</span></span><br></pre></td></tr></table></figure></div>
<p><strong>2. 用发布订阅模式实现用户上线订阅</strong></p>
<div class="highlight-container" data-rel="Js"><figure class="iseeu highlight js"><table><tr><td class="code"><pre><span class="line">type <span class="title class_">Notify</span> = <span class="function">(<span class="params">user: User</span>) =&gt;</span> <span class="keyword">void</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">class</span> <span class="title class_">User</span> &#123;</span><br><span class="line">    <span class="attr">name</span>: string;</span><br><span class="line">    <span class="attr">status</span>: <span class="string">&quot;offline&quot;</span> | <span class="string">&quot;online&quot;</span>;</span><br><span class="line">    <span class="attr">followers</span>: &#123; <span class="attr">user</span>: <span class="title class_">User</span>;<span class="attr">ontify</span>: <span class="title class_">Notify</span> &#125;[];</span><br><span class="line"></span><br><span class="line">    <span class="title function_">constructor</span>(<span class="params">name: string</span>) &#123;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">name</span> = name;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">status</span> = <span class="string">&quot;offline&quot;</span>;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">followers</span> = [];</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="title function_">subscribe</span>(<span class="params">user: User, notify: Notify</span>) &#123;</span><br><span class="line">        user.<span class="property">followers</span>.<span class="title function_">push</span>(&#123; user, notify &#125;);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="title function_">online</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">status</span> = <span class="string">&quot;online&quot;</span>;</span><br><span class="line"></span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">followers</span>.<span class="title function_">forEach</span>(<span class="function">(<span class="params">&#123; notify &#125;</span>) =&gt;</span> &#123;</span><br><span class="line">            <span class="title function_">notify</span>(<span class="variable language_">this</span>);</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>
<h1 id="小节"><a href="#小节" class="headerlink" title="小节"></a>小节</h1><h2 id="1-前端设计模式基本情况"><a href="#1-前端设计模式基本情况" class="headerlink" title="1.前端设计模式基本情况"></a>1.前端设计模式基本情况</h2><p><strong>1.1 设计模式定义</strong></p>
<p><strong>1.2 设计模式背景同步</strong></p>
<p><strong>1.3 设计模式发展趋势</strong></p>
<p><strong>1.4 设计模式分类</strong></p>
<h2 id="2-浏览器中的设计模式"><a href="#2-浏览器中的设计模式" class="headerlink" title="2.浏览器中的设计模式"></a>2.浏览器中的设计模式</h2><p><strong>2.1 单例模式</strong></p>
<p><strong>2.2 发布订阅模式</strong></p>
<h2 id="设计模式并不复杂，重要的是其思维模式以及在不同编程语言及场景下的应用"><a href="#设计模式并不复杂，重要的是其思维模式以及在不同编程语言及场景下的应用" class="headerlink" title="设计模式并不复杂，重要的是其思维模式以及在不同编程语言及场景下的应用"></a><em>设计模式并不复杂，重要的是其思维模式以及在不同编程语言及场景下的应用</em></h2>]]></content>
      <categories>
        <category>前端开发</category>
      </categories>
      <tags>
        <tag>JS</tag>
      </tags>
  </entry>
</search>
